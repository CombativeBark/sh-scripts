#!/bin/bash
# Simple Yes/No Prompt using dmenu, can be used as a simple "Are you sure?".
# Can also be used to run commands with an extra layer of security.

# Bool for executing a command
option_command=0

# Bool for reversing options order.
option_reverse=0

# Default var states
prompt="Prompt"
cmd="echo '[WARN] Prompt: No command provided.'"

# Default answer options
option_positive="Yes"
option_negative="No"

# Supposedly makes eval safer. https://stackoverflow.com/a/52538533
# Most likely remaining unused until I care more about security.
token_quote() {
  local quoted=()
  for token; do
    quoted+=( "$(printf '%q' "$token")" )
  done
  printf '%s\n' "${quoted[*]}"
}

reverse_options()
{ 
	if [[ "${option_reverse}" -eq 0 ]]; then
		echo "${option_positive}\n${option_negative}"
	else
		echo "${option_negative}\n${option_positive}"
	fi
}

print_usage() 
{
	echo "usage: prompt [options] [-p <prompt>] [-c <command>]"
	echo "  options:"
	echo "    -p            Set the prompt in the popup menu."
	echo "    -c            Set the command that will be run."
	echo "    -y            Change the options to 'Yes & No'."
	echo "    -o            Change the options to 'On & Off'."
	echo "    -t            Change the options to 'True & False'."
	echo "    -r            Reverse the order of the options."
	echo "    -h            Display usage helper"
	echo ""
	1>&2;
	exit 0;
}

while getopts ":p:c:yotrh" flag; do
	case ${flag} in
		# Leaving long flags incase I feel like adding it later.
		p | --prompt)
			prompt=${OPTARG}
		;;

		c | --command)
			cmd=${OPTARG}
			option_command=1
		;;

		y | --yes-no)
			option_positive="Yes"
			option_negative="No"
		;;

		o | --on-off)
			option_positive="On"
			option_negative="Off"
		;;

		t | --true-false)
			option_positive="True"
			option_negative="False"
		;;

		r | --reverse)
			option_reverse=1
		;;

		h | --help)
			print_usage
		;;

		*)
			echo -e "prompt: unrecognized option\nTry 'prompt -h' for more information."	
			1>&2;
			exit 0;
		;;
	esac
done
shift $((OPTIND-1))

if [[ "${option_command}" -eq 0 ]]; then
	if [[ "$( echo -e $(reverse_options) | dmenu -p "${prompt}" )" == ${option_positive} ]]; then
		echo 1
	else
		echo 0
	fi
else
	[[ "$( echo -e $(reverse_options) | dmenu -p "${prompt}" )" == ${option_positive} ]] && eval "${cmd[@]}"
fi
